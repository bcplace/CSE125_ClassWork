; SMT-LIBv2 description generated by Yosys 0.25+1 (git sha1 d3216593d, clang 10.0.0-4ubuntu1 -fPIC -Os)
; yosys-smt2-module divider
(declare-sort |divider_s| 0)
(declare-fun |divider_is| (|divider_s|) Bool)
(declare-fun |divider#0| (|divider_s|) (_ BitVec 4)) ; \a_i
(declare-fun |divider#1| (|divider_s|) (_ BitVec 4)) ; \b_i
(define-fun |divider#2| ((state |divider_s|)) (_ BitVec 4) (bvurem (|divider#0| state) (|divider#1| state))) ; \rem_o
; yosys-smt2-output rem_o 4
; yosys-smt2-wire rem_o 4
(define-fun |divider_n rem_o| ((state |divider_s|)) (_ BitVec 4) (|divider#2| state))
(define-fun |divider#3| ((state |divider_s|)) (_ BitVec 4) (bvudiv (|divider#0| state) (|divider#1| state))) ; \quot_o
; yosys-smt2-output quot_o 4
; yosys-smt2-wire quot_o 4
(define-fun |divider_n quot_o| ((state |divider_s|)) (_ BitVec 4) (|divider#3| state))
; yosys-smt2-input b_i 4
; yosys-smt2-wire b_i 4
; yosys-smt2-witness {"offset": 0, "path": ["\\b_i"], "smtname": "b_i", "smtoffset": 0, "type": "input", "width": 4}
(define-fun |divider_n b_i| ((state |divider_s|)) (_ BitVec 4) (|divider#1| state))
; yosys-smt2-input a_i 4
; yosys-smt2-wire a_i 4
; yosys-smt2-witness {"offset": 0, "path": ["\\a_i"], "smtname": "a_i", "smtoffset": 0, "type": "input", "width": 4}
(define-fun |divider_n a_i| ((state |divider_s|)) (_ BitVec 4) (|divider#0| state))
; yosys-smt2-assert 0 $assert$divider.sv:9$5 divider.sv:9.28-31.44
(define-fun |divider_a 0| ((state |divider_s|)) Bool (or true (not true))) ; $assert$divider.sv:9$5
(define-fun |divider#4| ((state |divider_s|)) Bool (= (|divider#2| state) (|divider#3| state))) ; $eq$divider.sv:34$13_Y
; yosys-smt2-assert 1 $assert$divider.sv:33$14 divider.sv:33.45-34.43
(define-fun |divider_a 1| ((state |divider_s|)) Bool (or (|divider#4| state) (not true))) ; $assert$divider.sv:33$14
(define-fun |divider#5| ((state |divider_s|)) Bool (= (|divider#3| state) (|divider#2| state))) ; $eq$divider.sv:33$10_Y
; yosys-smt2-assert 2 $assert$divider.sv:32$11 divider.sv:32.44-33.44
(define-fun |divider_a 2| ((state |divider_s|)) Bool (or (|divider#5| state) (not true))) ; $assert$divider.sv:32$11
(define-fun |divider_a| ((state |divider_s|)) Bool (and
  (|divider_a 0| state)
  (|divider_a 1| state)
  (|divider_a 2| state)
))
(define-fun |divider_u| ((state |divider_s|)) Bool true)
(define-fun |divider_i| ((state |divider_s|)) Bool true)
(define-fun |divider_h| ((state |divider_s|)) Bool true)
(define-fun |divider_t| ((state |divider_s|) (next_state |divider_s|)) Bool true) ; end of module divider
; yosys-smt2-topmod divider
; end of yosys output
